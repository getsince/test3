name: build

on:
  pull_request:
  push:
    branches: [master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    name: docker build amd64
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          # platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  release:
    name: plain mix release
    runs-on: ubuntu-20.04

    env:
      MIX_ENV: prod
      ARCHIVE_RELEASE: true
      RELEASE_PATH: release
      RELEASE_VERSION: ${{ github.sha }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.13.1"
          otp-version: "24.2"

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build

          key: release-${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: release-${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Build release
        run: mix release

      - name: Upload release to S3
        run: |
          aws --version
          aws configure set region eu-north-1
          aws s3 cp release/t-${{ github.sha }}.tar.gz s3://${{ secrets.RELEASE_BUCKET }}/backend/${{ github.sha }}/release.tar.gz
