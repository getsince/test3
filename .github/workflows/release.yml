name: release

on:
  push:
    tags:
      - "**"

jobs:
  release:
    name: plain mix release
    runs-on: ubuntu-22.04

    permissions:
      contents: write

    env:
      MIX_ENV: prod
      ARCHIVE_RELEASE: true
      RELEASE_PATH: release
      # TODO?
      RELEASE_VERSION: 0.1.0
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v2

      # TODO use setup-beam once https://github.com/erlef/setup-beam/pull/124 is released

      # - name: Set up Elixir
      #   uses: erlef/setup-beam@v1
      #   with:
      #     elixir-version: "1.13.1"
      #     otp-version: "24.2"

      # from https://github.com/erlef/setup-beam/issues/116#issuecomment-1158544960
      - name: Install Erlang
        run: |
          curl -Lo erlang.tar.gz https://repo.hex.pm/builds/otp/ubuntu-22.04/OTP-25.0.2.tar.gz
          mkdir erlang
          tar zxf erlang.tar.gz -C erlang --strip-components=1
          erlang/Install -minimal  `pwd`/erlang
          echo "`pwd`/erlang/bin" >> $GITHUB_PATH
          rm erlang.tar.gz

      - name: Install Elixir
        run: |
          curl -Lo elixir.zip https://repo.hex.pm/builds/elixir/v1.13.4-otp-25.zip
          mkdir elixir
          unzip -q -o -d `pwd`/elixir elixir.zip
          echo "`pwd`/elixir/bin" >> $GITHUB_PATH
          rm elixir.zip

      - name: Install hex
        run: mix local.hex --force

      - name: Install rebar
        run: mix local.rebar --force

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            _build

          key: release-${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: release-${{ runner.os }}-mix-

      - name: Restore assets cache
        uses: actions/cache@v2
        with:
          path: assets/node_modules
          key: assets-${{ hashFiles('assets/package-lock.json') }}
          restore-keys: assets-

      - name: Install dependencies
        run: mix deps.get

      - name: Build assets
        run: mix assets.deploy

      - name: Build release
        run: mix release

      - name: Rename archive
        run: mv release/t-${RELEASE_VERSION}.tar.gz ubuntu-22-04-amd64.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ubuntu-22-04-amd64.tar.gz

      # - name: Upload release to S3
      #   run: |
      #     aws --version
      #     aws configure set region eu-north-1
      #     aws s3 cp release/t-${{ github.sha }}.tar.gz s3://${{ secrets.RELEASE_BUCKET }}/backend/${ echo ${{ github.ref }} | tr -d /refs/tags/ }.tar.gz
